<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>单片机学习</title>
      <link href="2020/10/02/dan-pian-ji-xue-xi/"/>
      <url>2020/10/02/dan-pian-ji-xue-xi/</url>
      
        <content type="html"><![CDATA[<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>普通化学笔记</title>
      <link href="2020/10/02/pu-tong-hua-xue-bi-ji/"/>
      <url>2020/10/02/pu-tong-hua-xue-bi-ji/</url>
      
        <content type="html"><![CDATA[<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>机械原理笔记</title>
      <link href="2020/10/02/ji-jie-yuan-li-bi-ji/"/>
      <url>2020/10/02/ji-jie-yuan-li-bi-ji/</url>
      
        <content type="html"><![CDATA[<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>互换性与测量技术笔记</title>
      <link href="2020/10/02/hu-huan-xing-yu-ce-liang-ji-zhu-bi-ji/"/>
      <url>2020/10/02/hu-huan-xing-yu-ce-liang-ji-zhu-bi-ji/</url>
      
        <content type="html"><![CDATA[<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>附录Ⅰ：平面图形的几何性质</title>
      <link href="2020/10/02/cai-liao-li-xue-bi-ji/"/>
      <url>2020/10/02/cai-liao-li-xue-bi-ji/</url>
      
        <content type="html"><![CDATA[<h2 id="Ⅰ-1-静矩和形心"><a href="#Ⅰ-1-静矩和形心" class="headerlink" title="Ⅰ.1 静矩和形心"></a>Ⅰ.1 静矩和形心</h2><h3 id="静矩"><a href="#静矩" class="headerlink" title="静矩"></a>静矩</h3><h3 id=""><a href="#" class="headerlink" title=""></a><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/%E5%9B%BE%E2%85%A0.1.jpg" alt="图Ⅰ.1"></h3><p>如图Ⅰ.1，图形对z轴的静矩：<br>$$<br>S_z=\int_{A}{y}dA<br>$$<br>对y轴的静矩：<br>$$<br>S_y=\int_{A}{z}dA<br>$$</p><h3 id="形心"><a href="#形心" class="headerlink" title="形心"></a>形心</h3><p>对于薄板而言，重心和形心坐标相同：<br>$$<br>\bar{y}=\int_{A}{y}dA=\frac{S_z}{A}\<br>\bar{z}=\int_{A}{z}dA=\frac{S_y}{A}<br>$$<br>由上述式子可知：<br>$$<br>S_z=0和S_y=0，则\bar{y}=0和\bar{z}=0<br>$$<br>若图形对某一轴的静矩等于零，则该轴必然通过图形的形心；反之，若某一轴通过形心，则图形对该轴的静矩必等于零</p><h3 id="由若干个简单图形组成的平面图形"><a href="#由若干个简单图形组成的平面图形" class="headerlink" title="由若干个简单图形组成的平面图形"></a>由若干个简单图形组成的平面图形</h3><p>图形各组成部分对某一轴的静矩的代数和，等于整个图形对同一轴的静矩，即：<br>$$<br>S_z=\sum_{i=1}^n{A_i\bar{y}<em>i}\<br>S_y=\sum_{i=1}^n{A_i\bar{z}_i}<br>$$<br>同理，组合图形形心坐标：<br>$$<br>\bar{y}=\frac{\sum</em>{i=1}^{n}{A_i}\bar{y}<em>i}{\sum</em>{i=1}^{n}{A_i}}\<br>\bar{z}=\frac{\sum_{i=1}^{n}{A_i}\bar{z}<em>i}{\sum</em>{i=1}^{n}{A_i}}<br>$$</p><h2 id="Ⅰ-2-惯性矩和惯性半径"><a href="#Ⅰ-2-惯性矩和惯性半径" class="headerlink" title="Ⅰ.2 惯性矩和惯性半径"></a>Ⅰ.2 惯性矩和惯性半径</h2><h3 id="惯性矩"><a href="#惯性矩" class="headerlink" title="惯性矩"></a>惯性矩</h3><p>图形对y轴的惯性矩：<br>$$<br>I_y=\int_A{Z^2}dA<br>$$<br>对z轴的惯性矩：<br>$$<br>I_z=\int_A{y^2}dA<br>$$</p><h3 id="惯性半径"><a href="#惯性半径" class="headerlink" title="惯性半径"></a>惯性半径</h3><p>将惯性矩写作图形面积A与某一长度的平方的乘积，即：<br>$$<br>I_y=A\cdot{i_y}^2\<br>I_z=A\cdot{i_z}^2<br>$$<br>或：<br>$$<br>i_y=\sqrt{\frac{I_y}{A}}\<br>i_z=\sqrt{\frac{I_z}{A}}\<br>其中i_y和i_z分别是图形对y轴和z轴的惯性半径<br>$$</p><h2 id="Ⅰ-3-惯性积"><a href="#Ⅰ-3-惯性积" class="headerlink" title="Ⅰ.3 惯性积"></a>Ⅰ.3 惯性积</h2><p>$$<br>I_{yz}=\int_A{yz}dA<br>$$</p><p>坐标系的两根坐标轴中只要<strong>有一根为图形的对称轴</strong>，则图形对这一坐标系的惯性积就等于零</p><h2 id="Ⅰ-4-平行移轴公式"><a href="#Ⅰ-4-平行移轴公式" class="headerlink" title="Ⅰ.4 平行移轴公式"></a>Ⅰ.4 平行移轴公式</h2><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/%E5%9B%BE%E2%85%A0.11.jpg" alt="图Ⅰ.11"><br>$$<br>如图Ⅰ.11，z_cCy_c坐标系过图形的形心，I_{yC}、I_{zC}、I_{yCzC}分别为图形对形心轴x_C和y_C的惯性矩和对z_cCy_c\坐标系的惯性积，则有：\<br>I_y=I_{yC}+a^2A\<br>I_z=I_{zC}+b^2A\<br>I_{yz}=I_{yCzC}+abA\<br>a、b是有正负的<br>$$</p><h2 id="Ⅰ-5-转轴公式-主惯性轴"><a href="#Ⅰ-5-转轴公式-主惯性轴" class="headerlink" title="Ⅰ.5 转轴公式  主惯性轴"></a>Ⅰ.5 转轴公式  主惯性轴</h2><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/%E5%9B%BE%E2%85%A0.14.jpg" alt="图Ⅰ.14"><br>$$<br>如图Ⅰ.14,在zOy坐标系中，图形对y轴和z轴的惯性矩和惯性积为I_y、I_z、I_{yz}，将坐标轴绕O点旋转\alpha角\(以逆时针旋转为正)，旋转后得到新的坐标系y_1Oz_1,则有\<br>I_{y_1}=\frac{I_y+I_z}{2}+\frac{I_y-I_z}{2}\cos(2\alpha)-I_{yz}\sin(2\alpha)\<br>I_{z_1}=\frac{I_y+I_z}{2}-\frac{I_y-I_z}{2}\cos(2\alpha)+I_{yz}\sin(2\alpha)\<br>I_{y_1z_1}=\frac{I_y-I_z}\sin(2\alpha)+I_{yz}\cos(2\alpha)<br>$$<br>求惯性矩的最值，解得：<br>$$<br>\tan(2\alpha_0)=-\frac{2I_{yz} }{I_y-I_z}\<br>可见，惯性矩取得最值的角度\alpha_0\恰好使惯性积等于零。<br>$$</p><p>$$<br>当坐标轴绕O点旋转到某一位置y_0和z_0时，<br>$$</p><p>图形对这一对坐标轴的<strong>惯性积等于零</strong>，这一对坐标轴称为<strong>主惯性轴</strong>，对主惯性轴的惯性矩称为<strong>主惯性矩</strong>。</p><p>通过图形<strong>形心C的主惯性轴</strong>称为<strong>形心主惯性轴</strong>，图形对该轴的惯性矩就称为<strong>形心主惯性矩</strong>。</p><p>主惯性矩的计算公式：<br>$$<br>I_{y_0}=\frac{I_y+I_z}{2}+\frac{1}{2}\sqrt{ {(I_y-I_z)^2+4I_{yz}^2} }\<br>I_{y_0}=\frac{I_y+I_z}{2}-\frac{1}{2}\sqrt{ {(I_y-I_z)^2+4I_{yz}^2} }<br>$$<br>且有，截面对通过同一点的任意一对相互垂直的坐标轴的两惯性矩之<strong>和为一常数</strong>：<br>$$<br>I_{y_1}+I_{z_1}=I_y+I_z<br>$$</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 材料力学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+github 搭建个人博客教程</title>
      <link href="2020/10/01/wo-de-di-yi-pian-bo-wen/"/>
      <url>2020/10/01/wo-de-di-yi-pian-bo-wen/</url>
      
        <content type="html"><![CDATA[<h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>Node.js 就是运行在服务端的 JavaScript </p><p>下载链接: <a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a>  (选择12.18.4长期支持版即可)</p><p>注: 安装过程中安装位置改为除C盘以外的其它盘，其它配置默认即可</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/QQ%E6%88%AA%E5%9B%BE20201002100928.png" alt="QQ截图20201002100928"></p><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p>github是一个完全免费的网站，我们的博客可以托管在上面，就不需要自己的服务器了，并且之后的一系列操作都是借用Git bash进行的</p><p>安装地址: <a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a></p><p>注: 安装过程中安装位置改为除C盘以外的其它盘，其它配置默认即可</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/QQ%E6%88%AA%E5%9B%BE20201002101815.png" alt="QQ截图20201002101815"></p><p>安装好后可以在桌面鼠标右键，点击Git Bash Here，输入：<code>git --version</code> 验证是否安装成功</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/QQ%E6%88%AA%E5%9B%BE20201002103813.png" alt="QQ截图20201002103813"></p><h3 id="添加国内镜像源"><a href="#添加国内镜像源" class="headerlink" title="添加国内镜像源"></a>添加国内镜像源</h3><p>国内镜像源的作用是加快hexo的安装速度，换句话说，如果没有国内镜像源，下面hexo的安装极有可能会失败 ( 血与泪的教训( Ĭ ^ Ĭ ) )</p><h4 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h4><p>1、在C盘以外的其它盘新建一个文件夹，这个文件夹就是保存所有博客上传东西的</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/QQ%E6%88%AA%E5%9B%BE20201002103148.png" alt="QQ截图20201002103148"></p><p>2、右键鼠标点击Git Bash Here</p><p>3、在弹出的窗口中输入：</p><pre><code>npm config set registry https://registry.npm.taobao.org</code></pre><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/QQ%E6%88%AA%E5%9B%BE20201002103526.png" alt="QQ截图20201002103526"></p><p>再输入回车即可：</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/QQ%E6%88%AA%E5%9B%BE20201002103630.png" alt="QQ截图20201002103630"></p><h3 id="注册Github账号-amp-amp-新建Github仓库"><a href="#注册Github账号-amp-amp-新建Github仓库" class="headerlink" title="注册Github账号&amp;&amp;新建Github仓库"></a>注册Github账号&amp;&amp;新建Github仓库</h3><h4 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h4><p>注册地址：<a href="https://github.com/">https://github.com/</a> 填写一系列内容即可</p><h4 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h4><p>点击右上角”+”号，New repository</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/1601606837448.png" alt="1601606837448"></p><p>仓库名称必须和用户名一样，并加后缀 .github.io</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/1601607072701.png" alt="1601607072701"></p><p>(显示红色是因为我已经注册过了)</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/1601607184429.png" alt="1601607184429"></p><p>(勾选”README”)</p><p>进入仓库，在settings中</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/1601607317599.png" alt="1601607317599"></p><p>拉到下面，GitHub Pages中Branch必须是”master”，否则我们博客的内容无法上传到网页</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/1601607367194.png" alt="1601607367194"></p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>在之前新建文件夹目录中，右键点击<code>Git Bash Here</code> ，输入<code>npm i hexo-cli -g</code> 安装Hexo</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/1601607662949.png" alt="1601607662949"></p><p>安装完成后再输入<code>hexo -v</code> 验证是否安装成功</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/1601607727363.png" alt="1601607727363"></p><p>然后就要初始化我们的网站，输入<code>hexo init</code>初始化文件夹，接着输入<code>npm install</code>安装必备的组件。(忽略warn)</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/1601607826088.png" alt="1601607826088"></p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/1601607850541.png" alt="1601607850541"></p><p>这样本地的网站配置也弄好啦</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/1601607927309.png" alt="1601607927309"></p><p>输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>打开本地服务器</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/1601607996809.png" alt="1601607996809"></p><p>然后浏览器打开<a href="https://link.zhihu.com/?target=http://localhost:4000/">http://localhost:4000/</a>，就可以看到我们的博客啦，效果如下：</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/1601608037886.png" alt="1601608037886"></p><p>Ctrl+C关闭本地服务器</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/1601608102593.png" alt="1601608102593"></p><h2 id="连接Github与本地"><a href="#连接Github与本地" class="headerlink" title="连接Github与本地"></a>连接Github与本地</h2><p>右键打开Git Bash，然后输入：</p><pre><code>git config --global user.name "yourname"git config --global user.email "youreamil"</code></pre><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/1601608283108.png" alt="1601608283108"></p><p>用户名和邮箱根据你自己进行修改</p><p>然后生成密钥SSH key：</p><pre><code>ssh-keygen -t rsa -C "youremail"</code></pre><p>打开<a href="https://link.zhihu.com/?target=http://github.com/">github</a>，在头像下面点击<code>settings</code>，再点击<code>SSH and GPG keys</code>，新建一个SSH，名字任意。</p><p>git bash中输入</p><pre><code>cat ~/.ssh/id_rsa.pub</code></pre><p>将输出的内容复制到框中，点击确定保存。</p><p>输入<code>ssh -T git@github.com</code>，如下图所示：</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/1601608451248.png" alt="1601608451248"></p><p>注：<code>ssh -T git@github.com</code>后，如果不能出现上图所示内容，但出现了(yes/no)选项，填yes并回车即可</p><p>点开博客根目录下<code>_config.yml</code> 文件，修改最后一行的配置：</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/1601608690894.png" alt="1601608690894"></p><pre><code>deploy:  type: git  repository: https://github.com/ChenZehao-rgb/ChenZehao-rgb.github.io  branch: master</code></pre><p>repository修改为你自己的github项目地址。 </p><h2 id="命令介绍"><a href="#命令介绍" class="headerlink" title="命令介绍"></a>命令介绍</h2><p>在Git Bash中，常用的命令有：</p><p><code>hexo cl</code>或<code>hexo clean</code> ：清理缓存</p><p><code>hexo g</code> ：部署文件</p><p><code>hexo s</code>： 生成本地预览</p><p><code>hexo d</code>： 上传文件到github仓库</p><p>发布文章时使用的顺序为<code>hexo cl(可选)</code> <code>hexo g</code> <code>hexo s(可选)</code> <code>hexo d</code> </p><h2 id="绑定域名-可选"><a href="#绑定域名-可选" class="headerlink" title="绑定域名(可选)"></a>绑定域名(可选)</h2><p>当你完成上述步骤后，已经获得了一个个人的博客，但这个博客只能用<a href="http://xxx.github.io/">http://xxx.github.io</a> 打开，绑定一个.com/.cn/.top之类的专属域名只是为了有牌面而已，下面介绍专属域名的绑定方法。</p><h3 id="1、在阿里云或百度云里购买域名"><a href="#1、在阿里云或百度云里购买域名" class="headerlink" title="1、在阿里云或百度云里购买域名"></a>1、在阿里云或百度云里购买域名</h3><p>按引导步骤完成即可</p><h3 id="2、域名添加解析记录-让域名激活"><a href="#2、域名添加解析记录-让域名激活" class="headerlink" title="2、域名添加解析记录(让域名激活)"></a>2、域名添加解析记录(让域名激活)</h3><p>以阿里云为例：</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/1601609640672.png" alt="1601609640672"></p><p>点击控制台</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/1601609698016.png" alt="1601609698016"></p><p>点击域名</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/1601609759762.png" alt="1601609759762"></p><p>在域名列表中点击”解析”</p><p>点击”添加记录”</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/1601609864008.png" alt="1601609864008"></p><p>注：记录类型选择CNAME；主机记录选择@；记录值填github的仓库地址</p><h3 id="3、github绑定域名"><a href="#3、github绑定域名" class="headerlink" title="3、github绑定域名"></a>3、github绑定域名</h3><p>进入你的github仓库，点击settings，拉到下面custom domain中填个人域名，save即可</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/1601610071184.png" alt="1601610071184"></p><h2 id="写文章、发布文章"><a href="#写文章、发布文章" class="headerlink" title="写文章、发布文章"></a>写文章、发布文章</h2><p>博客根目录下鼠标右键点击Git Bash Here，安装拓展<code>npm i hexo-deployer-git</code> ，然后输入<code>hexo new post "我的第一篇博文"</code> 新建文章</p><p><img src="http://qhk3o4cdy.hn-bkt.clouddn.com//img/1601610325215.png" alt="1601610325215"></p><p>然后打开<code>source\_posts</code>的目录，可以发现下面多了一个<code>我的第一篇博文.md</code>文件，这个md文件就是你写作的文件了。</p><p>然后在根目录中，Git Bash，依次输入<code>hexo cl(可选)</code> <code>hexo g</code> <code>hexo s(可选)</code> <code>hexo d</code> ，即可在你的博客中看见新发的文章。</p><h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><p>你的个人博客至此就搭建好了，更多的关于主题、内容的设置可以在网上搜索</p><p>Markdown编辑器推荐：typora</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><h3 id="超详细Hexo-Github博客搭建小白教程：https-zhuanlan-zhihu-com-p-35668237-utm-source-qq-amp-utm-medium-social-amp-utm-oi-1121337958187311104"><a href="#超详细Hexo-Github博客搭建小白教程：https-zhuanlan-zhihu-com-p-35668237-utm-source-qq-amp-utm-medium-social-amp-utm-oi-1121337958187311104" class="headerlink" title="超详细Hexo+Github博客搭建小白教程：https://zhuanlan.zhihu.com/p/35668237?utm_source=qq&amp;utm_medium=social&amp;utm_oi=1121337958187311104"></a>超详细Hexo+Github博客搭建小白教程：<a href="https://zhuanlan.zhihu.com/p/35668237?utm_source=qq&amp;utm_medium=social&amp;utm_oi=1121337958187311104">https://zhuanlan.zhihu.com/p/35668237?utm_source=qq&amp;utm_medium=social&amp;utm_oi=1121337958187311104</a></h3><h3 id="matery主题：https-github-com-blinkfox-hexo-theme-matery-blob-develop-README-CN-md"><a href="#matery主题：https-github-com-blinkfox-hexo-theme-matery-blob-develop-README-CN-md" class="headerlink" title="matery主题：https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md"></a>matery主题：<a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md</a></h3><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/10/01/hello-world/"/>
      <url>2020/10/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
